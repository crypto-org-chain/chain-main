syntax = "proto3";
package chainmain.nft_transfer.v1;

option go_package = "github.com/crypto-org-chain/chain-main/x/nft-transfer/types";

import "gogoproto/gogo.proto";
import "ibc/core/client/v1/client.proto";

// Msg defines the ibc/nft-transfer Msg service.
service Msg {
  // Transfer defines a rpc handler method for MsgTransfer.
  rpc Transfer(MsgTransfer) returns (MsgTransferResponse);
}

// MsgTransfer defines a msg to transfer non fungible tokens between
// ICS721 enabled chains. See ICS Spec here:
// https://github.com/cosmos/ibc/tree/master/spec/app/ics-721-nft-transfer#data-structures
message MsgTransfer {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // the port on which the packet will be sent
  string source_port = 1 [(gogoproto.moretags) = "yaml:\"source_port\""];
  // the channel by which the packet will be sent
  string source_channel = 2 [(gogoproto.moretags) = "yaml:\"source_channel\""];
  // the class_id of tokens to be transferred
  string class_id = 3;
  // the non fungible tokens to be transferred
  repeated string token_ids = 4;
  // the sender address
  string sender = 5;
  // the recipient address on the destination chain
  string receiver = 6;
  // Timeout height relative to the current block height.
  // The timeout is disabled when set to 0.
  ibc.core.client.v1.Height timeout_height = 7
      [(gogoproto.moretags) = "yaml:\"timeout_height\"", (gogoproto.nullable) = false];
  // Timeout timestamp in absolute nanoseconds since unix epoch.
  // The timeout is disabled when set to 0.
  uint64 timeout_timestamp = 8 [(gogoproto.moretags) = "yaml:\"timeout_timestamp\""];
}

// MsgTransferResponse defines the Msg/Transfer response type.
message MsgTransferResponse {}
